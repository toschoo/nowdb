/* ========================================================================
 * (c) Tobias Schoofs, 2018
 * ========================================================================
 * Task: wrapper for simple thread services
 * ========================================================================
 *
 * ========================================================================
 */
#ifndef nowdb_task_decl
#define nowdb_task_decl

#include <nowdb/types/error.h>
#include <nowdb/types/time.h>

#include <pthread.h>

/* ------------------------------------------------------------------------
 * Task
 * ------------------------------------------------------------------------
 */
typedef pthread_t nowdb_task_t;
typedef void* (*nowdb_task_entry_t)(void*);

/* ------------------------------------------------------------------------
 * Create a task
 * ------------------------------------------------------------------------
 */
nowdb_err_t nowdb_task_create(nowdb_task_t       *task,
                              nowdb_task_entry_t entry,
                              void               *args);

/* ------------------------------------------------------------------------
 * Destroy task after it has terminated
 * ------------------------------------------------------------------------
 */
void nowdb_task_destroy(nowdb_task_t task);

/* ------------------------------------------------------------------------
 * My task
 * ------------------------------------------------------------------------
 */
nowdb_task_t nowdb_task_myself();

/* ------------------------------------------------------------------------
 * Sleep for n nanoseconds
 * ------------------------------------------------------------------------
 */
nowdb_err_t nowdb_task_sleep(nowdb_time_t delay);

#endif
